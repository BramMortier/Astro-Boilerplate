---
import { HTMLAttributes } from "astro/types"

interface Props extends HTMLAttributes<"button"> {
	class?: string
}

const { class: className, ...props } = Astro.props
---

<button class:list={["c-button", className]} {...props}>
	<slot />
</button>

<style is:global lang="scss">
	.c-button {
		--button-bg: var(--scheme-accent);
		--button-color: var(--clr-white);
		--button-border: var(--scheme-accent);

		background-color: var(--button-bg);
		color: var(--button-color);
		border: 2px solid var(--button-border);

		display: flex;
		align-items: center;
		justify-content: center;
		gap: var(--space-12);

		font-family: var(--font-primary);
		font-size: var(--fs-16);
		font-weight: var(--fw-500);
		outline: none;
		padding-inline: var(--space-32);
		border-radius: var(--border-radius-5);
		height: 2.5rem;
		transition: all ease 0.2s;

		&:hover {
			--button-bg: transparent;
			--button-color: var(--scheme-accent);
			--button-color: var(--scheme-accent);
		}

		&--secondary {
			--button-bg: var(--scheme-accent-alt);
			--button-color: var(--clr-white);
			--button-border: var(--scheme-accent-alt);

			&:hover {
				--button-bg: transparent;
				--button-color: var(--scheme-accent-alt);
				--button-color: var(--scheme-accent-alt);
			}
		}

		&--tertiary {
			--button-bg: transparent;
			--button-color: var(--scheme-contrast);
			--button-border: transparent;
		}

		&:disabled {
			opacity: 0.3;

			&:hover {
				cursor: not-allowed;
			}
		}

		&:hover {
			cursor: pointer;
		}
	}
</style>
